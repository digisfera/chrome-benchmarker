// Generated by CoffeeScript 1.8.0
(function() {
  var benchmarker, chooseFun, minimist, path, printUsage, run, url;

  url = require('url');

  path = require('path');

  minimist = require('minimist');

  benchmarker = require('./index');

  run = function() {
    var argv, benchmarkingFun, options, target;
    argv = minimist(process.argv.slice(2));
    target = argv['_'][0];
    options = argv;
    if (!target) {
      return printUsage();
    }
    benchmarkingFun = chooseFun(target);
    if (target === 'stdinJs') {
      target = process.stdin;
    }
    return benchmarkingFun(target, options, function(err, success) {
      if (err) {
        return console.error(err);
      }
      if (argv.json) {
        return console.log(success);
      } else {
        console.log("Memory: " + (parseFloat(success.memory / 1024).toFixed(2)) + "kB");
        return console.log("Time: " + (parseFloat(success.time).toFixed(2)) + "ms");
      }
    });
  };

  chooseFun = function(target) {
    var targetUrl, _ref, _ref1;
    targetUrl = url.parse(target);
    if (targetUrl.host) {
      return benchmarker.url;
    } else if (target === 'stdinJs') {
      return benchmarker.jsStream;
    } else if ((_ref = path.extname(target)) === '.js') {
      return benchmarker.js;
    } else if ((_ref1 = path.extname(target)) === '.html' || _ref1 === '.htm') {
      return benchmarker.html;
    } else {
      throw "Unknown target type: " + target;
    }
  };

  printUsage = function() {
    console.log("Usage:");
    console.log("");
    console.log("chrome-benchmarker.js target --json --useFun <url|js|html> --debuggingPort <port> --port <port> --host <host> --basePath <path>");
    console.log("");
    return console.log("All arguments are optional except `target`");
  };

  module.exports = {
    run: run
  };

}).call(this);
